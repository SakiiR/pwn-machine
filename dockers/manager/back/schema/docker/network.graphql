extend type Query {
  dockerNetworks: [DockerNetwork!]!
}

type DockerNetwork {
  id: ID!
  name: String!
  labels: [KeyValue!]!
  created: DateTime!
  ipv6: Boolean!
  driver: String!
  internal: Boolean!
  ipams: [DockerNetworkIpam!]!
  usingContainers: [DockerContainer!]!
}

extend type Mutation {
  dockerCreateNetwork(
    name: String!
    labels: [KeyValueInput!]! = []
    ipv6: Boolean = false
    driver: String! = "bridge"
    internal: Boolean = false
    ipam: DockerNetworkIpamInput
  ): DockerNetwork
}

type DockerNetworkIpam {
  subnet: String!
  ipRange: String
  gateway: String
}

input DockerNetworkIpamInput {
  subnet: String
  ipRange: String
  gateway: String
}

extend type Mutation {
  dockerRemoveNetwork(id: ID!): DockerNetwork
  dockerPruneNetworks: [DockerNetwork!]
}

extend type Mutation {
  dockerConnectContainerToNetwork(
    input: dockerConnectContainerNetworkInput
  ): Boolean!
  dockerDisconnectContainerFromNetwork(
    input: dockerConnectContainerNetworkInput
  ): Boolean!
}

input dockerConnectContainerNetworkInput {
  containerId: ID!
  networkId: ID!
}
