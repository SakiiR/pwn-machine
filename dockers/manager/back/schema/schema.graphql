type Query {
  traefikRouters: [TraefikRouter!]!
  traefikEntrypoints: [TraefikEntrypoint!]!
  traefikServices(protocols: [TraefikProtocol!]): [TraefikService!]!
  traefikMiddlewares: [TraefikMiddleware!]!
}

type Mutation {
  login(password: String!, otp: Int!, expire: Int): User!
  register(password: String!, otp: Int!): User!
  traefikCreateRouter(input: TraefikRouterInput): TraefikRouter!
  traefikDeleteRouter(
    input: TraefikDeleteRouterInput
  ): TraefikDeleteRouterResponse!
}

type Subscription {
  _unused: Boolean
}

type KeyValue {
  key: String!
  value: String!
}

input KeyValueInput {
  key: String!
  value: String!
}

type User {
  token: String!
}
