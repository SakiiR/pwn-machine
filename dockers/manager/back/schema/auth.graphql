extend type Query {
  authNeedsSetup: SetupNeeded
}

type SetupNeeded {
  step: SetupStepNeeded
  totpUri: String
}

enum SetupStepNeeded {
  PASSWORD
  TOTP
}

extend type Mutation {
  login(password: String!, otp: Int!, expire: Int): User!
  setPassword(password: String!): Boolean!
  setTotp(uri: String!, totp: Int!): Boolean!
  register(password: String!, otp: Int!): User!
}

type User {
  token: String!
}
