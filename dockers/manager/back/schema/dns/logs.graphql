
type DnsLogResponse {
    name: String!
    rdata: String!
    type: DnsRuleType!
}

type DnsLog {
    nodeId: ID!
    origin: String!
    date: DateTime!
    query: String!
    type: DnsRuleType!
    error: String
    responses: [DnsLogResponse!]!
}
input DnsLogFilter {
    domain: String
    type: String
}

input CursorInput{
    offset: Int
    count: Int
}

extend type Query{
    dnsLogs(filter: DnsLogFilter, cursor: CursorInput): [DnsLog!]!
}

extend type Subscription{
    dnsLogs(filter: DnsLogFilter): DnsLog
}